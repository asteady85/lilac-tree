AWSTemplateFormatVersion: '2010-09-09'
Description: Static website on private S3 + CloudFront + custom domain

Parameters:
  BucketName:
    Type: String
    Description: The name of the S3 bucket
  Environment:
    Type: String
    Description: The environment name (test, live)
    AllowedValues:
      - test
      - live

  DomainName:
    Type: String
    Description: The full domain name (e.g., www.example.com)

  HostedZoneId:
    Type: String
    Description: Route53 Hosted Zone ID
    Default: 'Z059704932AZHEIRUAMQO'

  CertificateArn:
    Type: String
    Description: ACM certificate ARN (must be in us-east-1)
    Default: 'arn:aws:acm:us-east-1:620461326275:certificate/d170f692-0def-4f9c-9b13-8bb48272729d'

Resources:
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${Environment}-${BucketName}"
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Statement:
          - Action: 's3:GetObject'
            Effect: Allow
            Principal:
              Service: 'cloudfront.amazonaws.com'
            Resource: !Sub '${WebsiteBucket.Arn}/*'
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}'

  CloudFrontOAC:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub '${DomainName}-oac'
        Description: Access control for private S3
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        DefaultRootObject: index.html
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt WebsiteBucket.RegionalDomainName
            S3OriginConfig: {}  # required for legacy compatibility
            OriginAccessControlId: !Ref CloudFrontOAC
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods: [GET, HEAD]
          CachedMethods: [GET, HEAD]
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
#        CustomErrorResponse:
#            - ErrorCode: 403
#              ResponsePagePath: /index.html
#              ResponseCode: 200
#              ErrorCachingMinTTL: 60
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          SslSupportMethod: sni-only
        Aliases:
          - !Ref DomainName

  DNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref DomainName
      Type: A
      AliasTarget:
        HostedZoneId: Z2FDTNDATAQYW2  # CloudFront Hosted Zone ID (always this value)
        DNSName: !GetAtt CloudFrontDistribution.DomainName

Outputs:
  WebsiteURL:
    Value: !Sub 'https://${DomainName}'
    Description: URL of the CloudFront-distributed website